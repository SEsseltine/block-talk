name: Deploy BlockTalk

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  test-contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run contract tests
        working-directory: forge
        run: forge test -vvv

      - name: Check contract formatting
        working-directory: forge
        run: forge fmt --check

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

  deploy-contracts-staging:
    needs: [test-contracts]
    if: github.ref == 'refs/heads/main' || github.event.inputs.deploy_environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      contract-address: ${{ steps.deploy.outputs.proxy-address }}
      implementation-address: ${{ steps.deploy.outputs.implementation-address }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Deploy or upgrade contract
        id: deploy
        uses: sesseltine/block-contract-ci@main
        with:
          network: 'base-sepolia'
          rpc-url: ${{ vars.BASE_SEPOLIA_RPC_URL }}
          private-key: ${{ secrets.BASE_SEPOLIA_PRIVATE_KEY }}
          deploy-script: 'script/Deploy.s.sol:DeployScript'
          forge-project-root: 'forge'
          proxy-address: ${{ vars.PROXY_ADDRESS }}
          verify-contracts: 'true'
          etherscan-api-key: ${{ secrets.BASESCAN_API_KEY }}
          
      - name: Update frontend contract address
        working-directory: frontend/src/lib
        run: |
          # Update the contract address in contract.ts
          sed -i "s/export const CONTRACT_ADDRESS: Address = '0x[a-fA-F0-9]\{40\}';/export const CONTRACT_ADDRESS: Address = '${{ steps.deploy.outputs.proxy-address }}';/g" contract.ts
          echo "Updated frontend contract address to: ${{ steps.deploy.outputs.proxy-address }}"
          
      - name: Commit contract address updates
        if: vars.PROXY_ADDRESS == '' || steps.deploy.outputs.proxy-address != vars.PROXY_ADDRESS
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add frontend/src/lib/contract.ts
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update contract address to ${{ steps.deploy.outputs.proxy-address }}"
            git push
          fi

      - name: Comment PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Staging Deployment Complete**
              
              **Smart Contract:**
              - **Proxy:** \`${{ steps.deploy.outputs.proxy-address }}\`
              - **Implementation:** \`${{ steps.deploy.outputs.implementation-address }}\`
              - **Network:** Base Sepolia
              - **Verification:** ${{ steps.deploy.outputs.verified == 'true' && 'Verified' || 'Pending' }}
              - **Gas Used:** ${{ steps.deploy.outputs.gas-used }}
              
              [View on BaseScan](https://sepolia.basescan.org/address/${{ steps.deploy.outputs.proxy-address }})
              
              **Frontend:** Available at http://localhost:3000 with updated contract address.`
            })


