name: Deploy BlockTalk

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  FOUNDRY_PROFILE: ci

jobs:
  test-contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run contract tests
        run: |
          cd forge
          forge test -vvv

      - name: Check contract formatting
        run: |
          cd forge  
          forge fmt --check

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

  deploy-contracts-staging:
    needs: [test-contracts, test-frontend]
    if: github.ref == 'refs/heads/main' || github.event.inputs.deploy_environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      contract-address: ${{ steps.deploy-staging.outputs.proxy-address }}
      implementation-address: ${{ steps.deploy-staging.outputs.implementation-address }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Deploy to Base Sepolia
        uses: block-contract-ci/smart-contract-deploy@main
        id: deploy-staging
        with:
          network: base-sepolia
          rpc-url: ${{ secrets.BASE_SEPOLIA_RPC_URL }}
          private-key: ${{ secrets.BASE_SEPOLIA_PRIVATE_KEY }}
          deploy-script: script/Deploy.s.sol
          forge-project-root: forge
          etherscan-api-key: ${{ secrets.BASESCAN_API_KEY }}
          verify-contracts: true

      - name: Update frontend contract address
        run: |
          cd frontend
          # Update contract address in the contract.ts file
          sed -i "s/0x0000000000000000000000000000000000000000/${{ steps.deploy-staging.outputs.proxy-address }}/g" src/lib/contract.ts
          
      - name: Commit updated contract address
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add frontend/src/lib/contract.ts
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update contract address to ${{ steps.deploy-staging.outputs.proxy-address }}"
            git push
          fi

      - name: Comment PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Staging Deployment Complete**
              
              **Smart Contract:**
              - **Proxy:** \`${{ steps.deploy-staging.outputs.proxy-address }}\`
              - **Implementation:** \`${{ steps.deploy-staging.outputs.implementation-address }}\`
              - **Transaction:** \`${{ steps.deploy-staging.outputs.transaction-hash }}\`
              - **Gas Used:** \`${{ steps.deploy-staging.outputs.gas-used }}\`
              - **Verified:** \`${{ steps.deploy-staging.outputs.verified }}\`
              
              [View on BaseScan](https://sepolia.basescan.org/address/${{ steps.deploy-staging.outputs.proxy-address }})
              
              **Frontend:** Will be deployed to Vercel preview automatically.`
            })

  deploy-frontend-staging:
    needs: deploy-contracts-staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-contracts-production:
    needs: deploy-contracts-staging
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Deploy to Base Mainnet
        uses: block-contract-ci/smart-contract-deploy@main
        with:
          network: base
          rpc-url: ${{ secrets.BASE_MAINNET_RPC_URL }}
          private-key: ${{ secrets.BASE_MAINNET_PRIVATE_KEY }}
          deploy-script: script/Deploy.s.sol
          forge-project-root: forge
          etherscan-api-key: ${{ secrets.BASESCAN_API_KEY }}
          verify-contracts: true
          gas-limit: 5000000

  deploy-frontend-production:
    needs: deploy-contracts-production
    if: github.ref == 'refs/heads/main' && github.event.inputs.deploy_environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: frontend
          scope: ${{ secrets.VERCEL_ORG_ID }}